@page "/products/details"
@using Microsoft.EntityFrameworkCore
@using QLSP2.Models
@inject IDbContextFactory<QLSP2.Data.QLSP2Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
  <h2>Product</h2>
  <hr />
  @if (product is null)
  {
    <p><em>Loading...</em></p>
  }
  else
  {
    <dl class="row">
      <dt class="col-sm-2">Name</dt>
      <dd class="col-sm-10">@product.Name</dd>
      <dt class="col-sm-2">Price</dt>
      <dd class="col-sm-10">@product.Price</dd>
      <dt class="col-sm-2">Quantity</dt>
      <dd class="col-sm-10">@product.Quantity</dd>
    </dl>
    <div>
      <a class="btn btn-primary" href="@($"/products/edit?id={product.Id}")">Edit</a> |
      <a class="btn btn-success" href="@($"/products")">Back to List</a>
    </div>
  }
</div>

@code {
  private Product? product;

  [SupplyParameterFromQuery]
  private Guid Id { get; set; }

  protected override async Task OnInitializedAsync()
  {
    using var context = DbFactory.CreateDbContext();
    product = await context.Product.FirstOrDefaultAsync(m => m.Id == Id);

    if (product is null)
    {
      NavigationManager.NavigateTo("notfound");
    }
  }
}
